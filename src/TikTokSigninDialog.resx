<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>